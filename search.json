[{"path":"https://zc2326.github.io/causalbkmr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 causalbkmr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"sample-simulated-dataset","dir":"Articles","previous_headings":"","what":"Sample simulated Dataset","title":"BKMRCMA Quick Start Example","text":"","code":"dat <-  cma_sampledata(N = 50, L=3, P=3, scenario=1, seed=7)  head(dat$data, n = 3L) #>           z1         z2         z3           M         x1          x2        x3 #> 1  2.2767428  0.1432685  0.7973699  0.58827130 -0.3556944  2.02334405 -1.477592 #> 2 -1.0893537 -0.0944783  0.4035083  0.01382552  1.0973004  0.86249250 -2.973256 #> 3 -0.6389109  0.2491581 -0.1243989 -0.42344188 -0.9066920 -0.02490949 -1.339762 #>           y #> 1  1.964451 #> 2 -1.526532 #> 3 -1.305984 dat = dat$data"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"fit-bkmr-models","dir":"Articles","previous_headings":"","what":"Fit BKMR Models","title":"BKMRCMA Quick Start Example","text":"let \\(\\) \\(n\\)--\\(L\\) matrix containing exposure mixture comprised \\(L\\) elements,E.M E.Y effect modifiers exposure-mediator exposure-outcome relationship respectively, \\(y\\), vector outcome data, \\(m\\), vector mediator data. Z.M <- cbind(,E.M) Z.Y <- cbind(,E.Y) Let Z.M exposures effect modifers E.M let Z.Y exposures effect modifers E.Y, create one matrix containing exposures, effect modifier Z.Y mediator, precisely order. Zm.Y <- cbind(Z.Y,m) NOTE: last column Zm.Y matrix must mediator order functions work properly.","code":"A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x1, dat$x2, dat$x3) y  <- dat$y m  <- dat$M   E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M)  Z.Y <- cbind(A, E.Y)  Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.m,file=\"bkmr_m.RData\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"values-at-which-to-predict-counterfactuals","dir":"Articles","previous_headings":"","what":"Values at which to predict counterfactuals","title":"BKMRCMA Quick Start Example","text":"Mean level confounders: define change exposure want estimate mediation effects: example, consider change exposures 25th 75th percentiles, fixing age (E.Y) testing 10th 90th percentiles. However, contrast can anything. Note: modifiers considered, fix levels modifiers index MCMC iterations used inference:","code":"X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25))   a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9) sel<-seq(5000,10000,by=10)"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"estimate-te-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate TE for BKMR","title":"BKMRCMA Quick Start Example","text":"Estimate TE change exposures \\(^*\\) \\(\\) fixing Effect modifier testing 10th percentile 90th percentile: Look posterior mean, median, 95% CI TE:","code":"e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  TE.ey10 <- TE.bkmr(a=a, astar=astar, e.y = e.y10, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122)  TE.ey90 <- TE.bkmr(a=a, astar=astar, e.y = e.y90, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122) TE.ey10$est #>         mean    median     lower    upper        sd #> TE 0.4433419 0.4451366 0.2863908 0.601123 0.0802884 TE.ey90$est #>        mean   median    lower    upper         sd #> TE 1.339359 1.343762 1.179134 1.477626 0.07874423  plotdf <- as.data.frame(TE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"estimate-cde-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate CDE for BKMR","title":"BKMRCMA Quick Start Example","text":"Estimate CDE change exposures \\(^*\\) \\(\\), fixing mediator 10th, 50th, 75th percentile effect modifier testing 10th percentile: Look posterior mean, median, 95% CI CDEs: Plotting:","code":"CDE.ey10 <- CDE.bkmr(a=a, astar=astar, e.y = e.y10, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\"  CDE.ey90 <- CDE.bkmr(a=a, astar=astar, e.y = e.y90, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\" CDE.ey10$est #>             mean    median     lower     upper         sd #> CDE10% 0.3260377 0.3276014 0.1254467 0.5072569 0.10005344 #> CDE50% 0.3478852 0.3488510 0.1461287 0.5280398 0.09656925 #> CDE75% 0.3581060 0.3617068 0.1598766 0.5443135 0.10011163 CDE.ey90$est #>            mean   median     lower    upper         sd #> CDE10% 1.215059 1.220603 0.9850737 1.413276 0.10774925 #> CDE50% 1.233969 1.237500 1.0434691 1.410319 0.09388749 #> CDE75% 1.238180 1.244269 1.0387424 1.408041 0.09410765 plotdf <- as.data.frame(CDE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"estimate-ndenie-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate NDE/NIE for BKMR","title":"BKMRCMA Quick Start Example","text":"Estimate TE, NDE NIE change exposures \\(^*\\) \\(\\) fixing age testing 90th percentile. Note: step takes run take longer complex BKMR fits, longer sel vectors larger. Look posterior mean, median, 95% CI TE, NDE, NIE Plotting","code":"mediationeffects.ey10  <- mediation.bkmr(a=a, astar=astar, e.y = e.y10, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10)  mediationeffects.ey90  <- mediation.bkmr(a=a, astar=astar, e.y = e.y90, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10) mediationeffects.ey10$est #>              mean     median       lower     upper         sd #> TE     0.43475329 0.43695477  0.28272467 0.5967626 0.07940782 #> NDE    0.34646758 0.34589094 -0.15942431 0.8452010 0.26231657 #> NIE    0.08828571 0.08618004 -0.41892744 0.5845620 0.26551892 #> CDE10% 0.31667148 0.31721110  0.09980919 0.4998968 0.09934223 #> CDE50% 0.33851356 0.33967494  0.13406825 0.5088642 0.09641575 #> CDE75% 0.34827973 0.35279634  0.12335966 0.5288362 0.10060523 mediationeffects.ey90$est #>             mean    median      lower     upper         sd #> TE     1.3317666 1.3362016  1.1664505 1.4777750 0.07597909 #> NDE    1.1884003 1.1969614  0.6276377 1.7311322 0.28853695 #> NIE    0.1433662 0.1405457 -0.3614840 0.7385272 0.28260910 #> CDE10% 1.2056666 1.2082351  0.9692586 1.4128013 0.10788303 #> CDE50% 1.2255143 1.2276630  1.0196915 1.3944634 0.09285689 #> CDE75% 1.2296552 1.2332571  1.0226156 1.3937021 0.09261384 plotdf <- as.data.frame(mediationeffects.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"risk-summary-for-totel-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Totel Effect","title":"BKMRCMA Quick Start Example","text":"","code":"riskSummary10 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y10, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary10,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange() riskSummary90 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y90, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary90,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange()"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"risk-summary-for-controlled-direct-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Controlled Direct Effect","title":"BKMRCMA Quick Start Example","text":"","code":"# CDE  CDEriskSummary10 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y10, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary10, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75)) CDEriskSummary90 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y90, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary90, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75))"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"total-effect","dir":"Articles","previous_headings":"Single-predictor health risks","what":"Total Effect","title":"BKMRCMA Quick Start Example","text":"","code":"risks.singvar10 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y10, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() risks.singvar90 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y90, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","id":"controlled-direct-effect","dir":"Articles","previous_headings":"Single-predictor health risks","what":"Controlled Direct Effect","title":"BKMRCMA Quick Start Example","text":"","code":"# single variable controlled direct effects CDErisks.singvar10 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                            e.y=e.y10, e.y.names=\"E.Y\", m.name = \"m\",                                            sel=sel) ggplot(CDErisks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() CDErisks.singvar90 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                                  e.y=e.y90, e.y.names=\"E.Y\", m.name = \"m\",                                                  sel=sel) ggplot(CDErisks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                                ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_method_overview.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian kernel machine regression-causal mediation analysis","text":"ability identify pathways complex exposure mixture operates critical development public health policy, mediation pathways can often influenced via interventions. Exposure complex mixtures ubiquitous, recent work toxicology epidemiology now emphasizes assessing mixtures chemicals. Since elements mixture potential exhibit complex interactions,important consider whole mixture evaluating nature relationship multiple chemicals health outcome. One approach quantifying biological mechanisms use causal mediation analysis. Causal mediation analysis allows decomposition total effect (TE) exposure outcome pathway operates indirectly intermediate (mediator) variable pathway independent intermediate variable, operates directly exposure outcome. methods exist estimate mediation effects exposure interest mixture exposure-mediator interactions present. Current methods require specifying outcome mediator regression model. media-tor variable restricted linear effect outcome, closed form solutions available estimate natural direct effect (NDE), natural indirect effect (NIE), controlled direct effects (CDEs) mediator relationship mixture outcome. presence nonlinear effect mediator outcome, knowledge, methods using causal inference framework currently exist estimate NDE, NIE, CDEs potentially complex exposure mixture outcome mediator variable. paper present novel causal mediation method estimate NDE, NIE, CDEs poten-tially complex mixture exposures outcome operating intermediate variable. method allow highly complex exposure-mediator exposure-mediator-response functions, addition complex exposure-covariate exposure-mediator-covariate relationships mediator outcome respectively, using Bayesian Kernel Machine Regression (BKMR). package causalbkmr implement BKMR-CMA method, use BKMR mediator outcome regression models since BKMR allows possible nonlinearities interactions among elements included kernel specified outcome, without prior specification, credible intervals BKMR fit inherently control multiple testing due Bayesian nature model prior specification. predict counterfactuals using posterior predictive distributions mediator outcome present algorithm estimation mediation effects. also conduct simulation study compare approach performs relative current mediation methods assume restrictive linear relationship exposure, mediator, outcome.","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_method_overview.html","id":"bayesian-kernel-machine-regression","dir":"Articles","previous_headings":"","what":"Bayesian kernel machine regression","title":"Bayesian kernel machine regression-causal mediation analysis","text":"first review Kernel Machine Regression (KMR) framework estimating effect complex mixture single time point exposure measured. subject \\(= 1, ..., n\\), assume \\[\\begin{equation}     Y_{}=h\\left(\\mathbf{}_{}\\right)+\\mathbf{c}_{}^{\\mathrm{T}} \\boldsymbol{\\beta}+\\epsilon_{} \\end{equation}\\] \\(\\mathbf{}_{}=\\left(a_{1}, \\ldots, a_{M}\\right)^{\\mathrm{T}}\\) vector \\(M\\) exposure variables. can shown model can expressed mixed model \\[y_{} \\sim N\\left(h_{}+\\mathbf{c}_{}^{T} \\boldsymbol{\\beta}, \\sigma^{2}\\right)\\] \\[\\begin{equation} \\mathbf{h} \\equiv\\left(h_{1}, \\ldots, h_{n}\\right)^{\\mathrm{T}} \\sim N(\\mathbf{0}, \\tau \\mathbf{K})     \\end{equation}\\] \\(\\mathbf{K}\\) kernel matrix, \\((, j)-\\)element \\(K(\\mathbf{}_{}, \\mathbf{}_{j})\\) different choices kernel. focus Gaussian kernel, flexibly captures wide range underlying functional forms \\(h(\\cdot)\\), although methods applicable broad choice kernels. assume \\[\\operatorname{cor}\\left(h_{}, h_{j}\\right)=\\exp \\left\\{-(1 / \\rho) \\sum_{m=1}^{M}\\left(a_{m}-a_{j m}\\right)^{2}\\right\\}\\] \\(\\rho\\) tuning parameter regulates smoothness dose-response function. assumption implies two subjects similar exposures similar risks (\\(a_i\\) \\(a_j\\), \\(h_i\\) close \\(h_j\\) ). Bobb et al (2015) presented Bayesian Kernel Machine Regression (BKMR) framework estimate effect complex mixture health outcome. fit (2), assume prior coefficients confounding variables, \\(\\beta \\sim 1\\), \\(\\sigma^{-2} \\sim \\operatorname{Gamma}\\left(a_{\\sigma}, b_{\\sigma}\\right)\\), set \\(a_{\\sigma} = b_{\\sigma} = 0.001\\). can parameterize BKMR \\(\\lambda=\\tau \\sigma^{-2}\\), assume Gamma prior distribution variance component \\(\\lambda\\). smoothness parameter \\(\\rho\\), assume \\(\\rho \\sim \\operatorname{Unif}(, b)\\) \\(=0\\) \\(b=100\\). additional details regarding BKMR prior specifications, see Bobb et al. (Bobb et al., 2015, 2018)","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_method_overview.html","id":"causal-mediation-analysis","dir":"Articles","previous_headings":"","what":"Causal Mediation Analysis","title":"Bayesian kernel machine regression-causal mediation analysis","text":"order define causal contrasts mediation context, first define notation. Let \\(Y_{}\\) denote counterfactual outcome \\(Y\\) exposure \\(\\) set level \\(\\) mediator \\(M\\) set level \\(m\\). Let \\(M_a\\) counterfactual mediator \\(M\\) observed exposure \\(\\) set level \\(\\). Accordingly,\\(Y_{aMa^∗}\\) represents counterfactual outcome \\(Y\\) exposure \\(\\) set level \\(\\) mediator \\(M\\) set level taken exposure \\(\\) set level \\(^∗\\). mediated effects interest, TE, NDE, NIE, CDEs, formally defined : \\[ \\begin{aligned} \\mathrm{TE} &=\\mathrm{E}\\left[Y_a-Y_{^*}\\right] \\\\ \\mathrm{NDE} &=\\mathrm{E}\\left[Y_{M_{^*}}-Y_{^* M_{^*}}\\right] \\\\ \\mathrm{NIE} &=\\mathrm{E}\\left[Y_{M_a}-Y_{M_{^*}}\\right] \\\\ \\mathrm{CDE}(m) &=\\mathrm{E}\\left[Y_{m}-Y_{^* m}\\right] \\end{aligned} \\] NDE captures average difference counterfactual outcomes change exposure level \\(^∗\\) \\(\\) , fixing mediator level taken exposure set \\(^∗\\). NIE measures average difference counterfactual outcomes fixing exposure level \\(\\), mediator varies level taken exposure set compared \\(^∗\\). CDE quantifies average difference counterfactual outcomes change exposure level \\(^∗\\) \\(\\) , intervening fix mediator specified level, \\(m\\).","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_method_overview.html","id":"bayesian-kernel-machine-regression-causal-mediation-analysis","dir":"Articles","previous_headings":"","what":"Bayesian kernel machine regression-causal mediation analysis","title":"Bayesian kernel machine regression-causal mediation analysis","text":"BKMR-Causal Mediation Analysis (BKMR-CMA), consider single normally distributed health outcome \\(Y\\), single normally distributed mediator variable \\(M\\), continuous exposure mixture \\(\\mathbf{}\\), continuous effect modifiers \\(\\mathbf{E}_M\\) may complex relationship exposures mediator, continuous effect modifiers \\(\\mathbf{E}_Y\\) may complex relationship exposures mediator outcome. Let \\(\\mathbf{Z}_M=\\left(\\mathbf{}, \\mathbf{E}_M\\right)\\) \\(\\mathbf{Z}_Y=\\left(\\mathbf{}, \\mathbf{E}_Y\\right)\\) matrices containing exposure variables (e.g., metals) effect modifiers include prospective kernel functions. Although \\(\\mathbf{Z}_M\\) \\(\\mathbf{Z}_Y\\) might sets variables, framework allows differ. Additionally, one sets variables \\(\\mathbf{E}_M\\) \\(\\mathbf{E}_Y\\) empty (.e., effect modifiers interact exposures /nonlinear relationship mediator outcome). Lastly, let \\(\\mathbf{C}\\) matrix confounders assumed linear effect outcome. allow potentially complex relationships elements \\(\\mathbf{Z}_M\\), model mediator variable using BMKR model: \\[ M_i=h_M\\left(\\mathbf{Z}_{M }\\right)+\\mathbf{C}_i^T \\boldsymbol{\\beta}+\\epsilon_{M }, \\] \\(\\epsilon_{M } \\stackrel{u d}{\\sim} N\\left(0, \\sigma_M^2\\right)\\). Since accounting exposure-mediator interactions important obtain unbiased effect estimates, include mediator variable along \\(\\mathbf{Z}_Y\\) kernel function modeling health outcome : \\[ Y_i=h_Y\\left(\\mathbf{Z}_{Y }, M_i\\right)+\\mathbf{C}_i^T \\boldsymbol{\\theta}+\\epsilon_{Y }, \\] \\(\\epsilon_{Y } \\stackrel{d}{\\sim} N\\left(0, \\sigma_Y^2\\right)\\). fitting models separately, assume \\(\\epsilon_{M }\\) \\(\\epsilon_{Y }\\) independent. model TE exposure mixture outcome, consider BKMR model : \\[ Y_i=h_{T E}\\left(\\mathbf{Z}_{Y }\\right)+\\mathbf{C}_i^T \\gamma+\\epsilon_{T E }, \\] \\(\\epsilon_{T E } \\stackrel{d d}{\\sim} N\\left(0, \\sigma_{T E}^2\\right)\\) estimate TE, NDE, NIE using BKMR-CMA particular levels effect modifiers, \\(\\mathbf{e}_M\\) \\(\\mathbf{e}_Y\\), change exposure mixture \\(\\boldsymbol{}^*\\) \\(\\boldsymbol{}\\) via following algorithm, let \\(\\mathbf{z}_M=\\left(\\boldsymbol{\\alpha}, \\mathbf{e}_M\\right), \\mathbf{z}_M^*=\\left(\\boldsymbol{}^*, \\mathbf{e}_M\\right), \\mathbf{z}_Y=\\) \\(\\left(\\boldsymbol{}, \\mathbf{e}_Y\\right)\\), \\(\\mathbf{z}_Y^*=\\left(\\boldsymbol{}^*, \\mathbf{e}_Y\\right)\\). corresponds fixed intervention exposures. utmost importance careful thought given choice values \\(\\boldsymbol{}^*\\) \\(\\boldsymbol{}\\) well \\(\\mathbf{e}_M\\) \\(\\mathbf{e}_Y\\) used estimate mediation effects. values lie within support multivariate distribution data ensure values compared observable population study. additional details regarding BKMR-CMA algorithm, see Devick et al.","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRCMA_method_overview.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Bayesian kernel machine regression-causal mediation analysis","text":"Devick, Katrina L., et al. “Bayesian kernel machine regression‐causal mediation analysis.” Statistics Medicine 41.5 (2022): 860-876. Bobb JF, Claus Henn B, Valeri L, Coull BA. 2018. Statistical software analyzing health effects multiple concurrent exposures via Bayesian kernel machine regression. Environ Health 17:67; doi:10.1186/s12940-018-0413-y. Bobb JF, Valeri L, Claus Henn B, Christiani DC, Wright RO, Mazumdar M, et al. 2015. Bayesian kernel machine regression estimating health effects multi-pollutant mixtures. Biostatistics 16:493–508; doi:10.1093/biostatistics/kxu058. Valeri L, Mazumdar M, Bobb J, Claus Henn B, Sharif O, Al. E. 2017. joint effect prenatal exposure metal mixtures neurodevelopmental outcomes 24 months: evidence rural Bangladesh. Env Heal Perspect 125; doi:DOI: 10.1289/EHP614.","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/BKMRMI_method_overview.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"BKMRMI_method_overview","text":"Anglen Bauer J, Devick KL, Bobb JF, Coull BA, Zoni S, Fedrighi C, Benedetti C, Guazzetti S, White R, Bellinger D, Yang Q, Webster T, Wright RO, Smith D, Lucchini R, Claus Henn. Associations mixture manganese, lead, copper chromium adolescent neurobehavior. Bobb JF, Claus Henn B, Valeri L, Coull BA. 2018. Statistical software analyzing health effects multiple concurrent exposures via Bayesian kernel machine regression. Environ Health 17:67; doi:10.1186/s12940-018-0413-y. Bobb JF, Valeri L, Claus Henn B, Christiani DC, Wright RO, Mazumdar M, et al. 2015. Bayesian kernel machine regression estimating health effects multi-pollutant mixtures. Biostatistics 16:493–508; doi:10.1093/biostatistics/kxu058. Rubin DB. 1987. Multiple imputation nonresponse surveys. Wiley. Valeri L, Mazumdar M, Bobb J, Claus Henn B, Sharif O, Al. E. 2017. joint effect prenatal exposure metal mixtures neurodevelopmental outcomes 24 months: evidence rural Bangladesh. Env Heal Perspect 125; doi:DOI: 10.1289/EHP614.","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","id":"overall-risk","dir":"Articles","previous_headings":"","what":"Overall Risk","title":"BKMR MI Quick Start","text":"models fit 10,000 iterations : Fit new OverallRiskSummaries function BKMR MI fits using approx method: Rerun OverallRiskSummaries function now FIXING quantile z2 0.25 (comparisons) NOTE: can fix one elements mixture, quantile fixing needs (q.alwaysfixed) can now plot data frame normally BKMR fit:  Plot case fixed quantile 1 () mixture elements. making multiple plots different quantiles, likely want fix y limits plots directly comparable.","code":"sel.MI <- seq(5001,10000, by = 5) overallrisks.MI <- OverallRiskSummaries.MI(BKMRfits = BKMRfits10, qs = seq(0.1, 0.9, by = 0.05),  q.fixed = 0.5, sel = sel.MI, method = \"approx\") overallrisks.MI.fixed <- OverallRiskSummaries.MI(BKMRfits = BKMRfits10, qs = seq(0.1, 0.9, by = 0.05),                               q.fixed = 0.75, q.alwaysfixed = 0.25,                               index.alwaysfixed = 2, sel = sel.MI, method=\"approx\") ggplot(overallrisks.MI, aes(quantile, est, ymin = est - 1.96 * sd, ymax = est + 1.96 * sd)) +     geom_hline(yintercept = 00, linetype = \"dashed\", color = \"gray\") +    geom_pointrange()+ ggtitle(\"\") + scale_y_continuous(name=\"estimate\") ggplot(overallrisks.MI.fixed, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +   geom_hline(yintercept=00, linetype=\"dashed\", color=\"gray\") +    geom_pointrange()+ ggtitle(\"\")+ scale_y_continuous(name=\"estimate\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","id":"single-variable-risk-generation-and-plot","dir":"Articles","previous_headings":"","what":"Single Variable Risk Generation and Plot","title":"BKMR MI Quick Start","text":"Fit new SingVarRiskSummaries function BKMR MI fits: Rerun SingVarRiskSummaries.MI function now fixing quantile z2 0.25 (comparisons) NOTE: can fix one elements mixture, quantile fixing needs (q.alwaysfixed). Also, need specify .z include fixed elements (still run dont , plot look funny).  Plot case fixed quantile 1 () mixture elements NOTE: change .z include fixed element, graph undesired points.","code":"singvarrisk.MI <- SingVarRiskSummaries.MI(BKMRfits=BKMRfits10, qs.diff = c(0.25, 0.75),                          q.fixed = c(0.25, 0.50, 0.75), sel=sel.MI, method = \"approx\") #> [1] \"1 out of 3 complete:  0.05 min run time\" #> [1] \"2 out of 3 complete:  0.1 min run time\" #> [1] \"3 out of 3 complete:  0.15 min run time\" singvarrisk.MI.fixed <- SingVarRiskSummaries.MI(BKMRfits = BKMRfits10, which.z=c(1,3,4),                                 qs.diff = c(0.25, 0.75),  q.fixed = c(0.25, 0.50, 0.75),                                 q.alwaysfixed = 0.25, index.alwaysfixed = 2,                                 sel=sel.MI, method = \"approx\") #> [1] \"1 out of 3 complete:  0.04 min run time\" #> [1] \"2 out of 3 complete:  0.07 min run time\" #> [1] \"3 out of 3 complete:  0.11 min run time\"   ## plot the single variable dataframe for the MI fits ggplot(singvarrisk.MI, aes(variable, est, ymin = est - 1.96*sd,                              ymax = est + 1.96*sd, col = q.fixed)) +     geom_hline(aes(yintercept=0), linetype=\"dashed\", color=\"gray\") +    geom_pointrange(position = position_dodge(width = 0.75)) +     coord_flip() + ggtitle(\"\")+    scale_x_discrete(name=\"Variable\")+ scale_y_continuous(name=\"estimate\") ggplot(singvarrisk.MI.fixed, aes(variable, est, ymin = est - 1.96*sd,                                    ymax = est + 1.96*sd, col = q.fixed)) +     geom_hline(aes(yintercept=0), linetype=\"dashed\", color=\"gray\") +    geom_pointrange(position = position_dodge(width = 0.75)) +  coord_flip() + ggtitle(\"\")+    scale_x_discrete(name=\"Variable\")+ scale_y_continuous(name=\"estimate\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","id":"univariate-risk-generation-and-plot","dir":"Articles","previous_headings":"","what":"Univariate Risk Generation and Plot","title":"BKMR MI Quick Start","text":"Fit new PredictorResponseUnivar function MI fits. part can easily run parallel selecting one z time (.z=1) rbinding dataframes. Plot univariate response functions:","code":"univar.MI <- PredictorResponseUnivar.MI(BKMRfits10, ngrid = 50, q.fixed = 0.5,                                          sel = sel.MI, method=\"approx\")  #> [1] \"1 out of 4 complete:  0.01 min run time\" #> [1] \"2 out of 4 complete:  0.03 min run time\" #> [1] \"3 out of 4 complete:  0.04 min run time\" #> [1] \"4 out of 4 complete:  0.06 min run time\" ggplot(univar.MI, aes(z, est, ymin = est - 1.96*se, ymax = est + 1.96*se)) +    geom_smooth(stat = \"identity\") + ylab(\"h(z)\") + facet_wrap(~ variable)+ggtitle(\"\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","id":"bivariate-risk-generation-and-plot","dir":"Articles","previous_headings":"","what":"Bivariate Risk Generation and Plot","title":"BKMR MI Quick Start","text":"First fit new PredictorResponseBivar function MI fits using approx method: Now, apply UNEDITED function PredictorResponseBivarLevels using Z matrix containing observations K MI datasets: Create plot bivariate curves:","code":"bivar.MI <- PredictorResponseBivar.MI(BKMRfits = BKMRfits10,                                         min.plot.dist = 1, sel=seq(5001,10000,by=500),                                        method=\"approx\") Z.MI <- Z.complete.MI(BKMRfits10) bivar.levels.MI <- PredictorResponseBivarLevels(pred.resp.df = bivar.MI,                                                  Z=Z.MI, both_pairs = TRUE,                                                  qs = c(0.25, 0.5, 0.75)) ggplot(bivar.levels.MI, aes(z1, est)) + geom_smooth(aes(col = quantile), stat = \"identity\") +    facet_grid(variable2 ~ variable1) + ggtitle(\"h(expos1 | quantiles of expos2)\") + xlab(\"expos1\") #> Warning: Removed 307 rows containing missing values (geom_smooth)."},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"sample-simulated-dataset","dir":"Articles","previous_headings":"","what":"Sample simulated Dataset","title":"BKMR CMA Example 2","text":"","code":"dat <-  cma_sampledata(N = 50, L=3, P=3, scenario=2, seed=7)  head(dat$data, n = 3L) #>           z1         z2         z3 M         x1          x2        x3 y #> 1  2.2767428  0.1432685  0.7973699 1 -0.3556944  2.02334405 -1.477592 1 #> 2 -1.0893537 -0.0944783  0.4035083 0  1.0973004  0.86249250 -2.973256 1 #> 3 -0.6389109  0.2491581 -0.1243989 0 -0.9066920 -0.02490949 -1.339762 0 dat = dat$data"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"fit-bkmr-models","dir":"Articles","previous_headings":"","what":"Fit BKMR Models","title":"BKMR CMA Example 2","text":"let \\(\\) \\(n\\)--\\(L\\) matrix containing exposure mixture comprised \\(L\\) elements,E.M E.Y effect modifiers exposure-mediator exposure-outcome relationship respectively, \\(y\\), vector outcome data, \\(m\\), vector mediator data. Z.M <- cbind(,E.M) Z.Y <- cbind(,E.Y) Let Z.M exposures effect modifers E.M let Z.Y exposures effect modifers E.Y, create one matrix containing exposures, effect modifier Z.Y mediator, precisely order. Zm.Y <- cbind(Z.Y,m) NOTE: last column Zm.Y matrix must mediator order functions work properly.","code":"A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x1, dat$x2, dat$x3) y  <- dat$y m  <- dat$M   E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M)  Z.Y <- cbind(A, E.Y)  Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.m,file=\"bkmr_m.RData\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"values-at-which-to-predict-counterfactuals","dir":"Articles","previous_headings":"","what":"Values at which to predict counterfactuals","title":"BKMR CMA Example 2","text":"Mean level confounders: define change exposure want estimate mediation effects: example, consider change exposures 25th 75th percentiles, fixing age (E.Y) testing 10th 90th percentiles. However, contrast can anything. Note: modifiers considered, fix levels modifiers index MCMC iterations used inference:","code":"X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25))   a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9) sel<-seq(5000,10000,by=10)"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"estimate-te-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate TE for BKMR","title":"BKMR CMA Example 2","text":"Estimate TE change exposures \\(^*\\) \\(\\) fixing Effect modifier testing 10th percentile 90th percentile: Look posterior mean, median, 95% CI TE:","code":"e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  TE.ey10 <- TE.bkmr(a=a, astar=astar, e.y = e.y10, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122)  TE.ey90 <- TE.bkmr(a=a, astar=astar, e.y = e.y90, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122) TE.ey10$est #>         mean    median      lower     upper        sd #> TE 0.3241404 0.3244238 0.01677121 0.6159663 0.1536497 TE.ey90$est #>        mean    median      lower     upper        sd #> TE 0.430469 0.4243573 0.07051303 0.7911519 0.1731175  plotdf <- as.data.frame(TE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"estimate-cde-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate CDE for BKMR","title":"BKMR CMA Example 2","text":"Estimate CDE change exposures \\(^*\\) \\(\\), fixing mediator 10th, 50th, 75th percentile effect modifier testing 10th percentile: Look posterior mean, median, 95% CI CDEs: Plotting:","code":"CDE.ey10 <- CDE.bkmr(a=a, astar=astar, e.y = e.y10, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\"  CDE.ey90 <- CDE.bkmr(a=a, astar=astar, e.y = e.y90, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\" CDE.ey10$est #>             mean    median        lower     upper        sd #> CDE10% 0.3092927 0.2999788 -0.043365129 0.6917523 0.1796301 #> CDE50% 0.3609607 0.3402882 -0.005062313 0.7992176 0.1939582 #> CDE75% 0.3609607 0.3402882 -0.005062313 0.7992176 0.1939582 CDE.ey90$est #>             mean    median      lower     upper        sd #> CDE10% 0.4085146 0.4027476 0.02286425 0.8323147 0.2007848 #> CDE50% 0.4562550 0.4515731 0.08655578 0.9197106 0.2095806 #> CDE75% 0.4562550 0.4515731 0.08655578 0.9197106 0.2095806 plotdf <- as.data.frame(CDE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"estimate-ndenie-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate NDE/NIE for BKMR","title":"BKMR CMA Example 2","text":"Estimate TE, NDE NIE change exposures \\(^*\\) \\(\\) fixing age testing 90th percentile. Note: step takes run take longer complex BKMR fits, longer sel vectors larger. Look posterior mean, median, 95% CI TE, NDE, NIE Plotting","code":"mediationeffects.ey10  <- mediation.bkmr(a=a, astar=astar, e.y = e.y10, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10)  mediationeffects.ey90  <- mediation.bkmr(a=a, astar=astar, e.y = e.y90, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10) mediationeffects.ey10$est #>              mean       median       lower     upper        sd #> TE     0.30916635  0.314290915 -0.02660571 0.5727188 0.1549434 #> NDE    0.29941873  0.295654080 -0.35512261 0.9599556 0.3399251 #> NIE    0.00974762 -0.004054163 -0.59142608 0.7151961 0.3341001 #> CDE10% 0.28813715  0.295343850 -0.10165967 0.6682970 0.1904052 #> CDE50% 0.34321913  0.342000447 -0.04373672 0.7398543 0.1917391 #> CDE75% 0.34321913  0.342000447 -0.04373672 0.7398543 0.1917391 mediationeffects.ey90$est #>              mean        median       lower     upper        sd #> TE     0.41530128  0.4057459986  0.11468494 0.7543082 0.1656023 #> NDE    0.40215162  0.3921504190 -0.31076430 1.1928738 0.3698672 #> NIE    0.01314967 -0.0004406865 -0.76797142 0.7832208 0.3853402 #> CDE10% 0.38643310  0.3906153092 -0.03306667 0.8217995 0.2082319 #> CDE50% 0.43791237  0.4344712028  0.05164739 0.8499772 0.2022834 #> CDE75% 0.43791237  0.4344712028  0.05164739 0.8499772 0.2022834 plotdf <- as.data.frame(mediationeffects.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"risk-summary-for-totel-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Totel Effect","title":"BKMR CMA Example 2","text":"Since ’s effect modification, two figures similar.","code":"riskSummary10 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y10, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary10,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange() riskSummary90 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y90, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary90,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"risk-summary-for-controlled-direct-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Controlled Direct Effect","title":"BKMR CMA Example 2","text":"Since ’s effect modification, two figures similar. ## Single-predictor health risks","code":"# CDE  CDEriskSummary10 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y10, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary10, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75)) CDEriskSummary90 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y90, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary90, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75))"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"total-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Total Effect","title":"BKMR CMA Example 2","text":"Since ’s effect modification, two figures similar.","code":"risks.singvar10 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y10, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() risks.singvar90 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y90, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario2.html","id":"controlled-direct-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Controlled Direct Effect","title":"BKMR CMA Example 2","text":"Since ’s effect modification, two figures similar.","code":"# single variable controlled direct effects CDErisks.singvar10 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                            e.y=e.y10, e.y.names=\"E.Y\", m.name = \"m\",                                            sel=sel) ggplot(CDErisks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() CDErisks.singvar90 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                                  e.y=e.y90, e.y.names=\"E.Y\", m.name = \"m\",                                                  sel=sel) ggplot(CDErisks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                                ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"sample-simulated-dataset","dir":"Articles","previous_headings":"","what":"Sample simulated Dataset","title":"BKMR CMA Example 3","text":"","code":"dat <-  cma_sampledata(N = 50, L=3, P=3, scenario=3, seed=7)  head(dat$data, n = 3L) #>           z1         z2         z3 M         x1          x2        x3 #> 1  2.2767428  0.1432685  0.7973699 1 -0.3556944  2.02334405 -1.477592 #> 2 -1.0893537 -0.0944783  0.4035083 0  1.0973004  0.86249250 -2.973256 #> 3 -0.6389109  0.2491581 -0.1243989 0 -0.9066920 -0.02490949 -1.339762 #>            y #> 1  0.8482788 #> 2 -1.0776233 #> 3 -1.2847646 dat = dat$data"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"fit-bkmr-models","dir":"Articles","previous_headings":"","what":"Fit BKMR Models","title":"BKMR CMA Example 3","text":"let \\(\\) \\(n\\)--\\(L\\) matrix containing exposure mixture comprised \\(L\\) elements,E.M E.Y effect modifiers exposure-mediator exposure-outcome relationship respectively, \\(y\\), vector outcome data, \\(m\\), vector mediator data. Z.M <- cbind(,E.M) Z.Y <- cbind(,E.Y) Let Z.M exposures effect modifers E.M let Z.Y exposures effect modifers E.Y, create one matrix containing exposures, effect modifier Z.Y mediator, precisely order. Zm.Y <- cbind(Z.Y,m) NOTE: last column Zm.Y matrix must mediator order functions work properly.","code":"A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x1, dat$x2, dat$x3) y  <- dat$y m  <- dat$M   E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M)  Z.Y <- cbind(A, E.Y)  Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.m,file=\"bkmr_m.RData\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"values-at-which-to-predict-counterfactuals","dir":"Articles","previous_headings":"","what":"Values at which to predict counterfactuals","title":"BKMR CMA Example 3","text":"Mean level confounders: define change exposure want estimate mediation effects: example, consider change exposures 25th 75th percentiles, fixing age (E.Y) testing 10th 90th percentiles. However, contrast can anything. Note: modifiers considered, fix levels modifiers index MCMC iterations used inference:","code":"X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25))   a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9) sel<-seq(5000,10000,by=10)"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"estimate-te-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate TE for BKMR","title":"BKMR CMA Example 3","text":"Estimate TE change exposures \\(^*\\) \\(\\) fixing Effect modifier testing 10th percentile 90th percentile: Look posterior mean, median, 95% CI TE:","code":"e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  TE.ey10 <- TE.bkmr(a=a, astar=astar, e.y = e.y10, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122)  TE.ey90 <- TE.bkmr(a=a, astar=astar, e.y = e.y90, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122) TE.ey10$est #>         mean    median     lower    upper        sd #> TE 0.9564067 0.9635427 0.7270294 1.197973 0.1179727 TE.ey90$est #>         mean    median     lower    upper        sd #> TE 0.9572624 0.9601179 0.7096564 1.196424 0.1158066  plotdf <- as.data.frame(TE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"estimate-cde-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate CDE for BKMR","title":"BKMR CMA Example 3","text":"Estimate CDE change exposures \\(^*\\) \\(\\), fixing mediator 10th, 50th, 75th percentile effect modifier testing 10th percentile: Look posterior mean, median, 95% CI CDEs: Plotting:","code":"CDE.ey10 <- CDE.bkmr(a=a, astar=astar, e.y = e.y10, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\"  CDE.ey90 <- CDE.bkmr(a=a, astar=astar, e.y = e.y90, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\" CDE.ey10$est #>             mean    median     lower    upper        sd #> CDE10% 0.8603252 0.8588774 0.5797773 1.130129 0.1383725 #> CDE50% 0.8817881 0.8760663 0.6127921 1.129211 0.1347592 #> CDE75% 0.8817881 0.8760663 0.6127921 1.129211 0.1347592 CDE.ey90$est #>             mean    median     lower    upper        sd #> CDE10% 0.8461777 0.8458703 0.5699850 1.119050 0.1415219 #> CDE50% 0.8663077 0.8605127 0.5928742 1.118321 0.1332145 #> CDE75% 0.8663077 0.8605127 0.5928742 1.118321 0.1332145 plotdf <- as.data.frame(CDE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"estimate-ndenie-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate NDE/NIE for BKMR","title":"BKMR CMA Example 3","text":"Estimate TE, NDE NIE change exposures \\(^*\\) \\(\\) fixing age testing 90th percentile. Note: step takes run take longer complex BKMR fits, longer sel vectors larger. Look posterior mean, median, 95% CI TE, NDE, NIE Plotting","code":"mediationeffects.ey10  <- mediation.bkmr(a=a, astar=astar, e.y = e.y10, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10)  mediationeffects.ey90  <- mediation.bkmr(a=a, astar=astar, e.y = e.y90, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10) mediationeffects.ey10$est #>              mean     median      lower     upper        sd #> TE     0.94593757 0.94804084  0.7198756 1.1688652 0.1131085 #> NDE    0.85960584 0.84321346  0.2710375 1.4308272 0.3009543 #> NIE    0.08633173 0.09297633 -0.4543617 0.6995467 0.3005891 #> CDE10% 0.84526794 0.85391990  0.5286018 1.0973116 0.1433318 #> CDE50% 0.86766860 0.87805519  0.5693485 1.1282255 0.1374816 #> CDE75% 0.86766860 0.87805519  0.5693485 1.1282255 0.1374816 mediationeffects.ey90$est #>             mean    median      lower     upper        sd #> TE     0.9463854 0.9498372  0.7192391 1.1691483 0.1166110 #> NDE    0.8116322 0.8042314  0.1268105 1.4279503 0.3245757 #> NIE    0.1347532 0.1278607 -0.4522172 0.8576302 0.3300124 #> CDE10% 0.8307799 0.8327528  0.5200515 1.1285557 0.1525085 #> CDE50% 0.8523683 0.8584531  0.5757799 1.1208304 0.1426577 #> CDE75% 0.8523683 0.8584531  0.5757799 1.1208304 0.1426577 plotdf <- as.data.frame(mediationeffects.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"risk-summary-for-totel-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Totel Effect","title":"BKMR CMA Example 3","text":"","code":"riskSummary10 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y10, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary10,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange() riskSummary90 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y90, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary90,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"risk-summary-for-controlled-direct-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Controlled Direct Effect","title":"BKMR CMA Example 3","text":"","code":"# CDE  CDEriskSummary10 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y10, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary10, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75)) CDEriskSummary90 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y90, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary90, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75))"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"total-effect","dir":"Articles","previous_headings":"Single-predictor health risks","what":"Total Effect","title":"BKMR CMA Example 3","text":"","code":"risks.singvar10 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y10, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() risks.singvar90 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y90, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario3.html","id":"controlled-direct-effect","dir":"Articles","previous_headings":"Single-predictor health risks","what":"Controlled Direct Effect","title":"BKMR CMA Example 3","text":"","code":"# single variable controlled direct effects CDErisks.singvar10 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                            e.y=e.y10, e.y.names=\"E.Y\", m.name = \"m\",                                            sel=sel) ggplot(CDErisks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() CDErisks.singvar90 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                                  e.y=e.y90, e.y.names=\"E.Y\", m.name = \"m\",                                                  sel=sel) ggplot(CDErisks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                                ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"sample-simulated-dataset","dir":"Articles","previous_headings":"","what":"Sample simulated Dataset","title":"BKMR CMA Example 4","text":"Example N=50, L=3 scenario 4 (binary \\(Y\\), continuous \\(M\\), x2 effect modifier \\(Y\\)):","code":"dat <-  cma_sampledata(N = 50, L=3, P=3, scenario=1, seed=7)  head(dat$data, n = 3L) #>           z1         z2         z3           M         x1          x2        x3 #> 1  2.2767428  0.1432685  0.7973699  0.58827130 -0.3556944  2.02334405 -1.477592 #> 2 -1.0893537 -0.0944783  0.4035083  0.01382552  1.0973004  0.86249250 -2.973256 #> 3 -0.6389109  0.2491581 -0.1243989 -0.42344188 -0.9066920 -0.02490949 -1.339762 #>           y #> 1  1.964451 #> 2 -1.526532 #> 3 -1.305984 dat = dat$data"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"fit-bkmr-models","dir":"Articles","previous_headings":"","what":"Fit BKMR Models","title":"BKMR CMA Example 4","text":"let \\(\\) \\(n\\)--\\(L\\) matrix containing exposure mixture comprised \\(L\\) elements,E.M E.Y effect modifiers exposure-mediator exposure-outcome relationship respectively, \\(y\\), vector outcome data, \\(m\\), vector mediator data. Z.M <- cbind(,E.M) Z.Y <- cbind(,E.Y) Let Z.M exposures effect modifers E.M let Z.Y exposures effect modifers E.Y, create one matrix containing exposures, effect modifier Z.Y mediator, precisely order. Zm.Y <- cbind(Z.Y,m) NOTE: last column Zm.Y matrix must mediator order functions work properly.","code":"A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x1, dat$x2, dat$x3) y  <- dat$y m  <- dat$M   E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M)  Z.Y <- cbind(A, E.Y)  Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=10000, verbose=TRUE, varsel=FALSE)  #save(fit.m,file=\"bkmr_m.RData\")"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"values-at-which-to-predict-counterfactuals","dir":"Articles","previous_headings":"","what":"Values at which to predict counterfactuals","title":"BKMR CMA Example 4","text":"Mean level confounders: define change exposure want estimate mediation effects: example, consider change exposures 25th 75th percentiles, fixing age (E.Y) testing 10th 90th percentiles. However, contrast can anything. Note: modifiers considered, fix levels modifiers index MCMC iterations used inference:","code":"X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25))   a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9) sel<-seq(5000,10000,by=10)"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"estimate-te-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate TE for BKMR","title":"BKMR CMA Example 4","text":"Estimate TE change exposures \\(^*\\) \\(\\) fixing Effect modifier testing 10th percentile 90th percentile: Look posterior mean, median, 95% CI TE:","code":"e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  TE.ey10 <- TE.bkmr(a=a, astar=astar, e.y = e.y10, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122)  TE.ey90 <- TE.bkmr(a=a, astar=astar, e.y = e.y90, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122) TE.ey10$est #>         mean    median     lower    upper        sd #> TE 0.4433419 0.4451366 0.2863908 0.601123 0.0802884 TE.ey90$est #>        mean   median    lower    upper         sd #> TE 1.339359 1.343762 1.179134 1.477626 0.07874423  plotdf <- as.data.frame(TE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"estimate-cde-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate CDE for BKMR","title":"BKMR CMA Example 4","text":"Estimate CDE change exposures \\(^*\\) \\(\\), fixing mediator 10th, 50th, 75th percentile effect modifier testing 10th percentile: Look posterior mean, median, 95% CI CDEs: Plotting:","code":"CDE.ey10 <- CDE.bkmr(a=a, astar=astar, e.y = e.y10, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\"  CDE.ey90 <- CDE.bkmr(a=a, astar=astar, e.y = e.y90, m.quant=c(0.1,0.5,0.75), fit.y=fit.y, alpha=0.05, sel=sel, seed=777) #> [1] \"Running 3 mediator values for CDE:\" #> [1] \"1 out of 3\" #> [1] \"2 out of 3\" #> [1] \"3 out of 3\" CDE.ey10$est #>             mean    median     lower     upper         sd #> CDE10% 0.3260377 0.3276014 0.1254467 0.5072569 0.10005344 #> CDE50% 0.3478852 0.3488510 0.1461287 0.5280398 0.09656925 #> CDE75% 0.3581060 0.3617068 0.1598766 0.5443135 0.10011163 CDE.ey90$est #>            mean   median     lower    upper         sd #> CDE10% 1.215059 1.220603 0.9850737 1.413276 0.10774925 #> CDE50% 1.233969 1.237500 1.0434691 1.410319 0.09388749 #> CDE75% 1.238180 1.244269 1.0387424 1.408041 0.09410765 plotdf <- as.data.frame(CDE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"estimate-ndenie-for-bkmr","dir":"Articles","previous_headings":"","what":"Estimate NDE/NIE for BKMR","title":"BKMR CMA Example 4","text":"Estimate TE, NDE NIE change exposures \\(^*\\) \\(\\) fixing age testing 90th percentile. Note: step takes run take longer complex BKMR fits, longer sel vectors larger. Look posterior mean, median, 95% CI TE, NDE, NIE Plotting","code":"mediationeffects.ey10  <- mediation.bkmr(a=a, astar=astar, e.y = e.y10, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10)  mediationeffects.ey90  <- mediation.bkmr(a=a, astar=astar, e.y = e.y90, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10) mediationeffects.ey10$est #>              mean     median       lower     upper         sd #> TE     0.43475329 0.43695477  0.28272467 0.5967626 0.07940782 #> NDE    0.34646758 0.34589094 -0.15942431 0.8452010 0.26231657 #> NIE    0.08828571 0.08618004 -0.41892744 0.5845620 0.26551892 #> CDE10% 0.31667148 0.31721110  0.09980919 0.4998968 0.09934223 #> CDE50% 0.33851356 0.33967494  0.13406825 0.5088642 0.09641575 #> CDE75% 0.34827973 0.35279634  0.12335966 0.5288362 0.10060523 mediationeffects.ey90$est #>             mean    median      lower     upper         sd #> TE     1.3317666 1.3362016  1.1664505 1.4777750 0.07597909 #> NDE    1.1884003 1.1969614  0.6276377 1.7311322 0.28853695 #> NIE    0.1433662 0.1405457 -0.3614840 0.7385272 0.28260910 #> CDE10% 1.2056666 1.2082351  0.9692586 1.4128013 0.10788303 #> CDE50% 1.2255143 1.2276630  1.0196915 1.3944634 0.09285689 #> CDE75% 1.2296552 1.2332571  1.0226156 1.3937021 0.09261384 plotdf <- as.data.frame(mediationeffects.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +    geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"risk-summary-for-totel-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Totel Effect","title":"BKMR CMA Example 4","text":"","code":"riskSummary10 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y10, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary10,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange() riskSummary90 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y90, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary90,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"risk-summary-for-controlled-direct-effect","dir":"Articles","previous_headings":"Summary statistics of the predictor-response function","what":"Risk Summary For Controlled Direct Effect","title":"BKMR CMA Example 4","text":"","code":"# CDE  CDEriskSummary10 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y10, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary10, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75)) CDEriskSummary90 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y90, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) ggplot(CDEriskSummary90, aes(quantile, est, ymin = est - 1.96*sd,                               ymax = est + 1.96*sd, col = m)) +    geom_pointrange(position = position_dodge(width = 0.75))"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"total-effect","dir":"Articles","previous_headings":"Single-predictor health risks","what":"Total Effect","title":"BKMR CMA Example 4","text":"","code":"risks.singvar10 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y10, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() risks.singvar90 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3,                                            e.y=e.y90, e.y.names=\"E.Y\",                                            sel=sel) ggplot(risks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/bkmrcma_example_scenario4.html","id":"controlled-direct-effect","dir":"Articles","previous_headings":"Single-predictor health risks","what":"Controlled Direct Effect","title":"BKMR CMA Example 4","text":"","code":"# single variable controlled direct effects CDErisks.singvar10 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                            e.y=e.y10, e.y.names=\"E.Y\", m.name = \"m\",                                            sel=sel) ggplot(CDErisks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() CDErisks.singvar90 = CDESingVarRiskSummaries.CMA(BKMRfits = fit.y,                                                  e.y=e.y90, e.y.names=\"E.Y\", m.name = \"m\",                                                  sel=sel) ggplot(CDErisks.singvar90, aes(variable, est, ymin = est - 1.96*sd,                                ymax = est + 1.96*sd, col = q.fixed, linetype = m.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()"},{"path":"https://zc2326.github.io/causalbkmr/articles/gBKMR_method_overview.html","id":"causal-estimands","dir":"Articles","previous_headings":"","what":"Causal Estimands","title":"gBKMR_method_overview","text":"consider setting \\(n\\) subjects, labelled \\(= 1, ..., n\\), enter study baseline (time \\(t=0\\)) subjected treatment \\(A_{0, }\\). clinical trial, value \\(A_{0, }\\) determined study protocol, usually random. observational study, \\(A_{0, }\\) observed recorded. collection covariates, \\(C_{0, }\\), also measured baseline. subsequent follow-visits, time-varying confounders, \\(L_{t, }\\) treatment \\(A_{t, }\\) recorded, \\(t = 1, ..., T\\). outcome \\(Y_i\\) observed subject, measured final visit \\(T\\), \\(Y_i\\) can continuous binary. Along  \\(Y_i\\) subject, possible realization treatment history \\(\\bar{} \\\\bar{\\mathcal{}}\\); also define \\(Y_i^{\\bar{}}\\),  observed subject, possibly contrary fact, received treatment history \\(\\bar{}\\). simple setting 3 visits, assume following DAG. static, fixed treatment regimes, overall causal effect exposures changing form \\(25^{th}\\) percentile \\(75^{th}\\) percentile can defined : \\[ACE = E[Y^{A_0 = a_0^*, A_1 = a_1^*, A_2 = a_2^*}] - E[Y^{A_0 = a_0, A_1 = a_1, A_2 = a_2}]\\] \\(a_0, a_1, a_2\\) \\(25^{th}\\) percentile exposures, \\(a_0^*, a_1^*, a_2^*\\) \\(75^{th}\\) percentile exposures.","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/gBKMR_method_overview.html","id":"g-formula","dir":"Articles","previous_headings":"","what":"g-formula","title":"gBKMR_method_overview","text":"basic idea g-formula standardization, common approach estimating expected value \\(Y^{\\bar{}}\\) population. (Naimai, Ashley ., et al., 2017) can illustrated simple time-fixed confounding example baseline confounders \\(C_0\\) sum possible values \\(c_0\\) \\(C_0\\). \\[E\\left(Y^{\\bar{}}\\right)=\\sum_{C_{0}  } E\\left(Y \\mid \\bar{}=\\bar{}, C_{0}=c_{0}\\right) P\\left(C_{0}=c_{0}\\right)\\] sum possible values \\(c_0\\) \\(C_0\\).\\ Using DAG, now define 3 identifying assumptions:\\ Consistency: \\[E[Y | A_0 = a_0, A_1 = a_1, A_2 = a_2] = E[Y^{a_0, a_1, a_2}| A_0 = a_0, A_1 = a_1, A_2 = a_2]\\] Exchangeability: Positivity: \\[Pr(a_t|a_{t-1}, l_t, c_0) > 0 \\ \\text{values } \\ l \\  \\text{} \\  Pr(L = l) \\ne 0 \\] general expression g-formula static fixed intervention : \\[\\begin{equation} E[Y^{\\bar{}}]= \\sum_{\\bar{l}} \\mathrm{E}[Y \\mid \\bar{}=\\bar{}, \\bar{L}=\\bar{l}, C_0 = c_0] \\prod_{t=0}^{T} f\\left(l_{t} \\mid \\bar{}_{t-1}, \\bar{l}_{t-1} \\right)f(c_0)  \\end{equation}] \\]","code":""},{"path":"https://zc2326.github.io/causalbkmr/articles/gBKMR_method_overview.html","id":"bayesian-kernel-machine-regression","dir":"Articles","previous_headings":"","what":"Bayesian kernel machine regression","title":"gBKMR_method_overview","text":"first review Kernel Machine Regression (KMR) framework estimating effect complex mixture single time point exposure measured. subject \\(= 1, ..., n\\), assume \\[\\begin{equation}     Y_{}=h\\left(\\mathbf{}_{}\\right)+\\mathbf{c}_{}^{\\mathrm{T}} \\boldsymbol{\\beta}+\\epsilon_{} \\end{equation}\\] \\(\\mathbf{}_{}=\\left(a_{1}, \\ldots, a_{M}\\right)^{\\mathrm{T}}\\) vector \\(M\\) exposure variables. can shown model can expressed mixed model \\[y_{} \\sim N\\left(h_{}+\\mathbf{c}_{}^{T} \\boldsymbol{\\beta}, \\sigma^{2}\\right)\\] \\[\\begin{equation} \\mathbf{h} \\equiv\\left(h_{1}, \\ldots, h_{n}\\right)^{\\mathrm{T}} \\sim N(\\mathbf{0}, \\tau \\mathbf{K})     \\end{equation}\\] \\(\\mathbf{K}\\) kernel matrix, \\((, j)-\\)element \\(K(\\mathbf{}_{}, \\mathbf{}_{j})\\) different choices kernel. focus Gaussian kernel, flexibly captures wide range underlying functional forms \\(h(\\cdot)\\), although methods applicable broad choice kernels. assume \\[\\operatorname{cor}\\left(h_{}, h_{j}\\right)=\\exp \\left\\{-(1 / \\rho) \\sum_{m=1}^{M}\\left(a_{m}-a_{j m}\\right)^{2}\\right\\}\\] \\(\\rho\\) tuning parameter regulates smoothness dose-response function. assumption implies two subjects similar exposures similar risks (\\(a_i\\) \\(a_j\\), \\(h_i\\) close \\(h_j\\) ). Bobb et al (2015) presented Bayesian Kernel Machine Regression (BKMR) framework estimate effect complex mixture health outcome. fit (2), assume prior coefficients confounding variables, \\(\\beta \\sim 1\\), \\(\\sigma^{-2} \\sim \\operatorname{Gamma}\\left(a_{\\sigma}, b_{\\sigma}\\right)\\), set \\(a_{\\sigma} = b_{\\sigma} = 0.001\\). can parameterize BKMR \\(\\lambda=\\tau \\sigma^{-2}\\), assume Gamma prior distribution variance component \\(\\lambda\\). smoothness parameter \\(\\rho\\), assume \\(\\rho \\sim \\operatorname{Unif}(, b)\\) \\(=0\\) \\(b=100\\). additional details regarding BKMR prior specifications, see Bobb et al. (Bobb et al., 2015, 2018)","code":""},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/articles/gBKMR_method_overview.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"gBKMR_method_overview","text":"Anglen Bauer J, Devick KL, Bobb JF, Coull BA, Zoni S, Fedrighi C, Benedetti C, Guazzetti S, White R, Bellinger D, Yang Q, Webster T, Wright RO, Smith D, Lucchini R, Claus Henn. Associations mixture manganese, lead, copper chromium adolescent neurobehavior. Bobb JF, Claus Henn B, Valeri L, Coull BA. 2018. Statistical software analyzing health effects multiple concurrent exposures via Bayesian kernel machine regression. Environ Health 17:67; doi:10.1186/s12940-018-0413-y. Bobb JF, Valeri L, Claus Henn B, Christiani DC, Wright RO, Mazumdar M, et al. 2015. Bayesian kernel machine regression estimating health effects multi-pollutant mixtures. Biostatistics 16:493–508; doi:10.1093/biostatistics/kxu058. Rubin DB. 1987. Multiple imputation nonresponse surveys. Wiley. Valeri L, Mazumdar M, Bobb J, Claus Henn B, Sharif O, Al. E. 2017. joint effect prenatal exposure metal mixtures neurodevelopmental outcomes 24 months: evidence rural Bangladesh. Env Heal Perspect 125; doi:DOI: 10.1289/EHP614.","code":""},{"path":"https://zc2326.github.io/causalbkmr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zilan Chai. Author, maintainer. Katrina Devick. Author. Linda Valeri. Author.","code":""},{"path":"https://zc2326.github.io/causalbkmr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chai Z, Devick K, Valeri L (2022). causalbkmr: Causal Inference Bayesian kernel machine regression. https://github.com/zc2326/causalbkmr, https://zc2326.github.io/causalbkmr/.","code":"@Manual{,   title = {causalbkmr: Causal Inference with Bayesian kernel machine regression},   author = {Zilan Chai and Katrina Devick and Linda Valeri},   year = {2022},   note = {https://github.com/zc2326/causalbkmr, https://zc2326.github.io/causalbkmr/}, }"},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/index.html","id":"about-the-package","dir":"","previous_headings":"","what":"About the Package","title":"Causal Inference with Bayesian kernel machine regression ","text":"R package causalbkmr consists three parts: BKMR-CMA Bayesian Kernel Machine Regression-Causal Mediation Analysis, MI-BKMR Multiple Imputation BKMR, g-BKMR Bayesian Kernel Machine Regression time-varying exposures time-varying confounders. welcome feedback questions (email zc2326@columbia.edu)!","code":""},{"path":"https://zc2326.github.io/causalbkmr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Causal Inference with Bayesian kernel machine regression ","text":"can install latest version causalbkmr via: Load causalbkmr:","code":"devtools::install_github(\"zc2326/causalbkmr\") library(causalbkmr)"},{"path":"https://zc2326.github.io/causalbkmr/index.html","id":"bkmr-cma","dir":"","previous_headings":"Installation","what":"BKMR-CMA","title":"Causal Inference with Bayesian kernel machine regression ","text":"command implements BKMR-CMA method, wich allows estimation direct indirect health effects multiple environmental exposures single mediator. use BKMR mediator outcome regression models since BKMR allows possible nonlinearities interactions among elements included kernel specified outcome, without prior specification, credible intervals BKMR fit inherently control multiple testing due Bayesian nature model prior specification. predict counterfactuals using posterior predictive distributions mediator outcome present algorithm estimation mediation effects. also conduct simulation study compare approach performs relative current mediation methods assume restrictive linear relationship exposure, mediator, outcome. Cite paper: Bayesian kernel machine regression-causal mediation analysis See Quick Start guide BKMR-CMA. See package website overview statistical modeling approaches.","code":""},{"path":"https://zc2326.github.io/causalbkmr/index.html","id":"bkmr-mi","dir":"","previous_headings":"Installation","what":"BKMR-MI","title":"Causal Inference with Bayesian kernel machine regression ","text":"command used valid estimation environmental mixture effects evaluation uncertainty presence missing data, imputed using multiple imputation techniques. commands combine information multiple Bayesian kernel machine regression (BKMR) models fit using bkmr R package (Bobb et al. 2015, Valeri et al. 2017, Bobb et al. 2018, Anglen Bauer et al. 2019). commands also produce effective visualizations estimated causal effects dose-response relationships. package contains functions used BKMR MI fits create data frame plotting ggplot. data BKMRfits10 simulated data 10 BKMRfits, BKMR fit using multiple imputed data size n = 500. See Quick Start guide BKMR-CMA. See package website overview statistical modeling approaches.","code":""},{"path":"https://zc2326.github.io/causalbkmr/index.html","id":"g-bkmr","dir":"","previous_headings":"Installation","what":"g-BKMR","title":"Causal Inference with Bayesian kernel machine regression ","text":"Exposure environmental chemicals shown rewire development affecting later health status. Quantifying joint effect environmental mixtures time crucial determine intervention timing. However, causal interpretation longitudinal environmental mixture studies encounters challenges. statistical approach allows simultaneously time-varying confounding, flexible modeling, variable selection examining effect multiple, correlated, time-varying exposures. address gaps, develop causal inference method, g-BKMR, enables us estimate nonlinear, non-additive effects time-varying exposures time-varying confounders, also allowing variable selection.","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/BKMRfits10.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Data for MI BKMR — BKMRfits10","title":"Sample Data for MI BKMR — BKMRfits10","text":"sample data MI BKMR illustration BKMRfits10 list 20 Multiple imputed datasets BKMRfits10[[1]] object contatinint results return kmbayes function","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/BKMRfits10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Data for MI BKMR — BKMRfits10","text":"","code":"BKMRfits10"},{"path":"https://zc2326.github.io/causalbkmr/reference/BKMRfits10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Data for MI BKMR — BKMRfits10","text":"object class list length 10.","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDE.bkmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate controlled direct effect for BKMR — CDE.bkmr","title":"Estimate controlled direct effect for BKMR — CDE.bkmr","text":"Estimate controlled direct effect BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDE.bkmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate controlled direct effect for BKMR — CDE.bkmr","text":"","code":"CDE.bkmr(   a,   astar,   e.y,   m.value = NULL,   m.quant = c(0.1, 0.5, 0.75),   fit.y,   alpha = 0.05,   sel,   seed )"},{"path":"https://zc2326.github.io/causalbkmr/reference/CDE.bkmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate controlled direct effect for BKMR — CDE.bkmr","text":"exposure variables current level astar exposure variables counterfactual level e.y effect modifier outcome variable m.value values mediator set m.quant values quantile mediator set fit.y model fit regressing outcome exposures, effect modifiers, mediator confounders outcome alpha 1-confidence interval sel vector selecting iterations thfe fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDE.bkmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate controlled direct effect for BKMR — CDE.bkmr","text":"Controlled direct effect BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDE.bkmr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate controlled direct effect for BKMR — CDE.bkmr","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDE.bkmr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate controlled direct effect for BKMR — CDE.bkmr","text":"","code":"if (FALSE) { library(causalbkmr) dat <-  cma_sampledata(N=300, L=3, P=3, scenario=1, seed=7)  A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x3) y  <- dat$y m  <- dat$M  E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M) Z.Y <- cbind(A, E.Y) Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.m,file=\"bkmr_m.RData\")  X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25)) a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  sel<-seq(2500,5000,by=5)   CDE.ey10 <- CDE.bkmr(a=a, astar=astar, e.y = e.y10, m.quant=c(0.1,0.5,0.75),                      fit.y=fit.y, alpha=0.05, sel=sel, seed=777) CDE.ey10$est  plotdf <- as.data.frame(CDE.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +   geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()   }"},{"path":"https://zc2326.github.io/causalbkmr/reference/CDERiskSummaries.CMA.html","id":null,"dir":"Reference","previous_headings":"","what":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","title":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","text":"Compare estimated Controlled Direct Effect predictors particular quantile second fixed quantile","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDERiskSummaries.CMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","text":"","code":"CDERiskSummaries.CMA(   fit.y,   e.y = NULL,   e.y.names = NULL,   m.value = NULL,   m.quant = c(0.1, 0.5, 0.75),   m.name,   qs = seq(0.25, 0.75, by = 0.05),   q.fixed = 0.5,   alpha = 0.05,   sel,   seed = 122 )"},{"path":"https://zc2326.github.io/causalbkmr/reference/CDERiskSummaries.CMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","text":"fit.y object contatinint results return kmbayes function, model fit regressing outcome exposures, effect modifiers, mediator confounders outcome e.y effect modifier outcome variable e.y.names column name effect modifier outcome variable m.value values mediator set m.quant values quantile mediator set m.name column name mediator qs vector quantiles calculate overall risk summary q.fixed second quantile compare estimated h function alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDERiskSummaries.CMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","text":"data frame containing (posterior mean) estimate posterior standard deviation CDE risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDERiskSummaries.CMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDERiskSummaries.CMA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CDERiskSummaries.CMA — CDERiskSummaries.CMA","text":"","code":"if (FALSE) { CDEriskSummary10 = CDERiskSummaries.CMA(fit.y = fit.y, e.y = e.y10, e.y.name = \"E.Y\", m.name = \"m\", sel = sel) }"},{"path":"https://zc2326.github.io/causalbkmr/reference/CDESingVarRiskSummaries.CMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Variable Risk Summaries\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — CDESingVarRiskSummaries.CMA","title":"Single Variable Risk Summaries\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — CDESingVarRiskSummaries.CMA","text":"Single Variable Risk Summaries Compute summaries risks associated change single variable Z single level (quantile) second level (quantile), variables Z fixed specific level (quantile)","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDESingVarRiskSummaries.CMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Variable Risk Summaries\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — CDESingVarRiskSummaries.CMA","text":"","code":"CDESingVarRiskSummaries.CMA(   BKMRfits,   e.y = NULL,   e.y.names = NULL,   which.z = 1:ncol(BKMRfits$Z),   z.names = NULL,   m.value = NULL,   m.quant = c(0.1, 0.5, 0.75),   m.name,   qs.diff = c(0.25, 0.75),   q.fixed = c(0.25, 0.5, 0.75),   alpha = 0.05,   sel,   seed = 122 )"},{"path":"https://zc2326.github.io/causalbkmr/reference/CDESingVarRiskSummaries.CMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Variable Risk Summaries\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — CDESingVarRiskSummaries.CMA","text":"BKMRfits object contatinint results return kmbayes function e.y effect modifier outcome variable e.y.names column name effect modifier outcome variable .z vector indicating variables (columns Z) summary computed z.names optional vector names columns z m.value values mediator set m.quant values quantile mediator set m.name column name mediator qs.diff vector indicating two quantiles q_1 q_2 compute h(z_q2)-h(z_q1) q.fixed second quantile compare estimated h function alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDESingVarRiskSummaries.CMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Variable Risk Summaries\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — CDESingVarRiskSummaries.CMA","text":"data frame containing (posterior mean) estimate posterior standard deviation singlepredictor CDE risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDESingVarRiskSummaries.CMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single Variable Risk Summaries\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — CDESingVarRiskSummaries.CMA","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":[]},{"path":"https://zc2326.github.io/causalbkmr/reference/CDEVarRiskSummary.CMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Single variable plot for CDE. — CDEVarRiskSummary.CMA","title":"Single variable plot for CDE. — CDEVarRiskSummary.CMA","text":"combination function VarRiskSummary riskSummary.approx MI BKMR fits. Compare estimated h function single variable (set variables) 75th versus 25th percentile, variables fixed particular percentile","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDEVarRiskSummary.CMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single variable plot for CDE. — CDEVarRiskSummary.CMA","text":"","code":"CDEVarRiskSummary.CMA(   whichz = 1,   BKMRfits,   e.y = NULL,   e.y.names = NULL,   m.value = NULL,   m.quant = c(0.1, 0.5, 0.75),   m.name,   qs.diff = c(0.25, 0.75),   q.fixed = 0.5,   alpha,   sel,   seed )"},{"path":"https://zc2326.github.io/causalbkmr/reference/CDEVarRiskSummary.CMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single variable plot for CDE. — CDEVarRiskSummary.CMA","text":"whichz vector indicating variables (columns Z) summary computed BKMRfits object contatinint results return kmbayes function e.y effect modifier outcome variable e.y.names column name effect modifier outcome variable m.value values mediator set m.quant values quantile mediator set m.name column name mediator qs.diff vector indicating two quantiles q_1 q_2 compute h(z_q2)-h(z_q1) q.fixed second quantile compare estimated h function alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDEVarRiskSummary.CMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single variable plot for CDE. — CDEVarRiskSummary.CMA","text":"data frame containing (posterior mean) estimate posterior standard deviation single predictor CDE risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/CDEVarRiskSummary.CMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single variable plot for CDE. — CDEVarRiskSummary.CMA","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.approx.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the posterior mean and variance of h at a new predictor values using approx method for MI BKMR fits — ComputePostmeanHnew.approx","title":"Compute the posterior mean and variance of h at a new predictor values using approx method for MI BKMR fits — ComputePostmeanHnew.approx","text":"Compute posterior mean variance h new predictor values","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.approx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the posterior mean and variance of h at a new predictor values using approx method for MI BKMR fits — ComputePostmeanHnew.approx","text":"","code":"ComputePostmeanHnew.approx(   fit,   y = NULL,   Z = NULL,   X = NULL,   Znew = NULL,   sel = NULL )"},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.approx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the posterior mean and variance of h at a new predictor values using approx method for MI BKMR fits — ComputePostmeanHnew.approx","text":"fit object contatin results return kmbayes function y vector outcome data length n. Z n--M matrix predictor variables included h function. row represents observation column represents predictor. X n--K matrix covariate data row represents observation column represents covariate. contain intercept column. Znew matrix new predictor values predict new h, row represents new observation. set NULL default using observed exposures Z sel selects iterations MCMC sampler use inference","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.approx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the posterior mean and variance of h at a new predictor values using approx method for MI BKMR fits — ComputePostmeanHnew.approx","text":"list mean, variance, entire mean matrix variance array","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.exact.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the posterior mean and variance of h at a new predictor values using exact method for MI BKMR fits — ComputePostmeanHnew.exact.MI","title":"Compute the posterior mean and variance of h at a new predictor values using exact method for MI BKMR fits — ComputePostmeanHnew.exact.MI","text":"#' Compute posterior mean variance h new predictor values Function estimate posterior mean variance obtaining posterior mean variance #' particular iterations using iterated mean variance formulas. function returns entire mean matrix variance array needed future functions obtain unbiased estimate SE used create CI plots.","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.exact.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the posterior mean and variance of h at a new predictor values using exact method for MI BKMR fits — ComputePostmeanHnew.exact.MI","text":"","code":"ComputePostmeanHnew.exact.MI(   fit,   y = NULL,   Z = NULL,   X = NULL,   Znew = NULL,   sel = NULL )"},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.exact.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the posterior mean and variance of h at a new predictor values using exact method for MI BKMR fits — ComputePostmeanHnew.exact.MI","text":"fit object contatinint results return kmbayes function y vector outcome data length n. Z n--M matrix predictor variables included h function. row represents observation column represents predictor. X n--K matrix covariate data row represents observation column represents covariate. contain intercept column. Znew matrix new predictor values predict new h, row represents new observation. set NULL default using observed exposures Z sel selects iterations MCMC sampler use inference","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/ComputePostmeanHnew.exact.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the posterior mean and variance of h at a new predictor values using exact method for MI BKMR fits — ComputePostmeanHnew.exact.MI","text":"list mean, variance, entire mean matrix variance array","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/OverallRiskSummaries.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","title":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","text":"Compare estimated h function predictors particular quantile second fixed quantile","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/OverallRiskSummaries.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","text":"","code":"OverallRiskSummaries.MI(   BKMRfits,   qs = seq(0.25, 0.75, by = 0.05),   q.fixed = 0.5,   q.alwaysfixed = NULL,   index.alwaysfixed = NULL,   sel = NULL,   method = \"approx\" )"},{"path":"https://zc2326.github.io/causalbkmr/reference/OverallRiskSummaries.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","text":"BKMRfits list multiple BKMR fits fits ran number MCMC iterations. qs vector quantiles calculate overall risk summary q.fixed second quantile compare estimated h function q.alwaysfixed quantile values point want keep fixed comparisons index.alwaysfixed index values point want keep fixed comparisons sel selects iterations MCMC sampler use inference method method obtaining posterior summaries vector new points. Options \"approx\" \"exact\"; defaults \"approx\", faster particularly large datasets","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/OverallRiskSummaries.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","text":"data frame containing (posterior mean) estimate posterior standard deviation overall risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/OverallRiskSummaries.MI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/OverallRiskSummaries.MI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate overall risk summaries for BKMR MI — OverallRiskSummaries.MI","text":"","code":"library(causalbkmr) data(\"BKMRfits10\") sel.MI <- seq(5001,10000, by = 5)  overallrisks.MI <- OverallRiskSummaries.MI(BKMRfits = BKMRfits10, qs = seq(0.1, 0.9, by = 0.05),  q.fixed = 0.5, sel = sel.MI, method = \"approx\") #> [1] \"approx method\" #> [1] \"1 out of 17 complete:  0.05 min run time\" #> [1] \"2 out of 17 complete:  0.07 min run time\" #> [1] \"3 out of 17 complete:  0.08 min run time\" #> [1] \"4 out of 17 complete:  0.09 min run time\" #> [1] \"5 out of 17 complete:  0.11 min run time\" #> [1] \"6 out of 17 complete:  0.12 min run time\" #> [1] \"7 out of 17 complete:  0.13 min run time\" #> [1] \"8 out of 17 complete:  0.14 min run time\" #> [1] \"9 out of 17 complete:  0.16 min run time\" #> [1] \"10 out of 17 complete:  0.17 min run time\" #> [1] \"11 out of 17 complete:  0.18 min run time\" #> [1] \"12 out of 17 complete:  0.19 min run time\" #> [1] \"13 out of 17 complete:  0.21 min run time\" #> [1] \"14 out of 17 complete:  0.22 min run time\" #> [1] \"15 out of 17 complete:  0.23 min run time\" #> [1] \"16 out of 17 complete:  0.24 min run time\" #> [1] \"17 out of 17 complete:  0.25 min run time\" ggplot(overallrisks.MI, aes(quantile, est, ymin = est - 1.96 * sd, ymax = est + 1.96 * sd)) + geom_hline(yintercept = 00, linetype = \"dashed\", color = \"gray\") +   geom_pointrange()+ ggtitle(\"\") + scale_y_continuous(name=\"estimate\") #> Error in ggplot(overallrisks.MI, aes(quantile, est, ymin = est - 1.96 *     sd, ymax = est + 1.96 * sd)): could not find function \"ggplot\""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivar.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","title":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","text":"Predict exposure-response function new grid points MI BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivar.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","text":"","code":"PredictorResponseBivar.MI(   BKMRfits,   z.pairs = NULL,   method = \"approx\",   ngrid = 50,   q.fixed = 0.5,   sel = NULL,   min.plot.dist = 0.5,   center = TRUE,   z.names = colnames(BKMRfits[[1]]$Z),   verbose = TRUE,   ... )"},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivar.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","text":"BKMRfits list multiple BKMR fits fits ran number MCMC iterations. z.pairs data frame showing pairs predictors plot method method obtaining posterior summaries vector new points. Options \"approx\" \"exact\"; defaults \"approx\", faster particularly large datasets ngrid number grid points dimension q.fixed vector quantiles fix remaining predictors Z sel logical expression indicating samples keep; defaults keeping second half samples min.plot.dist specifies minimum distance new grid point needs observed data point order compute prediction; points computed center flag whether scale exposure-response function mean zero z.names optional vector names columns z verbose TRUE FALSE: flag whether print intermediate output screen ... arguments pass prediction function","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivar.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","text":"long data frame name first predictor, name second predictor, value first predictor, value second predictor, posterior mean estimate, posterior standard deviation estimated exposure response function","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivar.MI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivar.MI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict the exposure-response function at a new grid of points for MI BKMR — PredictorResponseBivar.MI","text":"","code":"if (FALSE) { library(causalbkmr) data(BKMRfits10) bivar.MI <- PredictorResponseBivar.MI(BKMRfits = BKMRfits10, min.plot.dist = 1, sel=seq(5001,10000,by=500), method=\"approx\") Z.MI <- Z.complete.MI(BKMRfits10) bivar.levels.MI <- PredictorResponseBivarLevels(pred.resp.df = bivar.MI,                                                Z=Z.MI, both_pairs = TRUE,                                                qs = c(0.25, 0.5, 0.75))  ggplot(bivar.levels.MI, aes(z1, est)) + geom_smooth(aes(col = quantile), stat = \"identity\") + facet_grid(variable2 ~ variable1) + ggtitle(\"h(expos1 | quantiles of expos2)\") + xlab(\"expos1\") }"},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivarPair.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bivariate predictor-response function on a new grid of points for MI BKMR — PredictorResponseBivarPair.MI","title":"Plot bivariate predictor-response function on a new grid of points for MI BKMR — PredictorResponseBivarPair.MI","text":"Plot bivariate predictor-response function new grid points MI BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivarPair.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bivariate predictor-response function on a new grid of points for MI BKMR — PredictorResponseBivarPair.MI","text":"","code":"PredictorResponseBivarPair.MI(   fit,   y,   Z,   X,   whichz1 = 1,   whichz2 = 2,   whichz3 = NULL,   method = \"approx\",   prob = 0.5,   q.fixed = 0.5,   sel = NULL,   ngrid = 50,   min.plot.dist = 0.5,   center = TRUE,   Z.MI,   ... )"},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivarPair.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bivariate predictor-response function on a new grid of points for MI BKMR — PredictorResponseBivarPair.MI","text":"fit object containing results returned kmbayes function y vector outcome data length n. Z n--M matrix predictor variables included h function. row represents observation column represents predictor. X n--K matrix covariate data row represents observation column represents covariate. contain intercept column. whichz1 vector identifying first predictor (column Z) plotted whichz2 vector identifying second predictor (column Z) plotted whichz3 vector identifying third predictor set pre-specified fixed quantile (determined prob) method method obtaining posterior summaries vector new points. Options \"approx\" \"exact\"; defaults \"approx\", faster particularly large datasets prob pre-specified quantile set third predictor (determined whichz3); defaults 0.5 (50th percentile) q.fixed vector quantiles fix remaining predictors Z sel logical expression indicating samples keep; defaults keeping second half samples ngrid number grid points cover range predictor (column Z) min.plot.dist specifies minimum distance new grid point needs observed data point order compute prediction; points computed center flag whether scale exposure-response function mean zero Z.MI Multiple Imputed  Z ... arguments pass prediction function","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseBivarPair.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bivariate predictor-response function on a new grid of points for MI BKMR — PredictorResponseBivarPair.MI","text":"data frame value first predictor, value second predictor, posterior mean estimate, posterior standard deviation","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseUnivar.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","title":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","text":"Plot univariate predictor-response function new grid point MI BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseUnivar.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","text":"","code":"PredictorResponseUnivar.MI(   BKMRfits,   which.z = 1:ncol(BKMRfits[[1]]$Z),   ngrid = 50,   q.fixed = 0.5,   sel = NULL,   min.plot.dist = Inf,   center = TRUE,   method = \"approx\",   ... )"},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseUnivar.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","text":"BKMRfits list multiple BKMR fits fits ran number MCMC iterations. .z vector identifying predictors (columns Z) plotted ngrid number grid points cover range predictor (column Z) q.fixed vector quantiles fix remaining predictors Z sel logical expression indicating samples keep; defaults keeping second half samples min.plot.dist specifies minimum distance new grid point needs observed data point order compute prediction; points computed center flag whether scale exposure-response function mean zero method method obtaining posterior summaries vector new points. Options \"approx\" \"exact\"; defaults \"approx\", faster particularly large datasets ... arguments pass prediction function","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseUnivar.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","text":"long data frame predictor name, predictor value, posterior mean estimate, posterior standard deviation","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseUnivar.MI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/PredictorResponseUnivar.MI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot univariate predictor-response function on a new grid of point for MI BKMR — PredictorResponseUnivar.MI","text":"","code":"if (FALSE) { library(causalbkmr) data(BKMRfits10) univar.MI <- PredictorResponseUnivar.MI(BKMRfits10, ngrid = 50, q.fixed = 0.5, sel = sel.MI, method=\"approx\") ggplot(univar.MI, aes(z, est, ymin = est - 1.96*se, ymax = est + 1.96*se)) + geom_smooth(stat = \"identity\") + ylab(\"h(z)\") + facet_wrap(~ variable)+ggtitle(\"\") }"},{"path":"https://zc2326.github.io/causalbkmr/reference/Rubin.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Rubins 1987 method — Rubin.MI","title":"Rubins 1987 method — Rubin.MI","text":"Function implement Rubins 1987 method estimate point estimates std errors combining information across MI fits (approx method)","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/Rubin.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rubins 1987 method — Rubin.MI","text":"","code":"Rubin.MI(mean.vec, variance.vec)"},{"path":"https://zc2326.github.io/causalbkmr/reference/Rubin.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rubins 1987 method — Rubin.MI","text":"mean.vec vector consist mean values variance.vec vector consist variance values","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/Rubin.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rubins 1987 method — Rubin.MI","text":"Point estimates std errors combining information across MI fits (approx method)","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.CMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","title":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","text":"Single Variable Risk Summaries CMA Compute summaries risks associated change single variable Z single level (quantile) second level (quantile), variables Z fixed specific level (quantile)","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.CMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","text":"","code":"SingVarRiskSummaries.CMA(   BKMRfits,   e.y = NULL,   e.y.names = NULL,   which.z = 1:ncol(BKMRfits$Z),   z.names = NULL,   qs.diff = c(0.25, 0.75),   q.fixed = c(0.25, 0.5, 0.75),   alpha = 0.05,   sel,   seed = 122 )"},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.CMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","text":"BKMRfits object containing results returned kmbayes function e.y effect modifier outcome variable e.y.names column name effect modifier outcome variable .z vector indicating variables (columns Z) summary computed z.names optional vector names columns z qs.diff vector indicating two quantiles q_1 q_2 compute h(z_q2) -h(z_q1) q.fixed vector quantiles fix remaining predictors Z alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.CMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","text":"data frame containing (posterior mean) estimate posterior standard deviation single predictor risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.CMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.CMA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single Variable Risk Summaries for CMA\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) — SingVarRiskSummaries.CMA","text":"","code":"if (FALSE) { library(causalbkmr) dat <-  cma_sampledata(N=300, L=3, P=3, scenario=1, seed=7)  A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x3) y  <- dat$y m  <- dat$M  E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M) Z.Y <- cbind(A, E.Y) Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.m,file=\"bkmr_m.RData\")  X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25)) a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  sel<-seq(2500,5000,by=5)   risks.singvar10 = SingVarRiskSummaries.CMA(BKMRfits = fit.y.TE, which.z = 1:3, e.y=e.y10, e.y.names=\"E.Y\", sel=sel) ggplot(risks.singvar10, aes(variable, est, ymin = est - 1.96*sd,                             ymax = est + 1.96*sd, col = q.fixed)) +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip()  }"},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","title":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","text":"Single Variable Risk Summaries MI BKMR fits Compute summaries risks associated change single variable Z single level (quantile) second level (quantile), variables Z fixed specific level (quantile) MI BKMR fits","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","text":"","code":"SingVarRiskSummaries.MI(   BKMRfits,   which.z = 1:ncol(BKMRfits[[1]]$Z),   qs.diff = c(0.25, 0.75),   q.fixed = c(0.25, 0.5, 0.75),   q.alwaysfixed = NULL,   index.alwaysfixed = NULL,   sel = NULL,   z.names = colnames(BKMRfits[[1]]$Z),   method = \"approx\",   ... )"},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","text":"BKMRfits list multiple BKMR fits fits ran number MCMC iterations. .z vector indicating variables (columns Z) summary computed qs.diff vector indicating two quantiles q_1 q_2 compute h(z_{q2}) -h(z_{q1}) q.fixed vector quantiles fix remaining predictors Z q.alwaysfixed quantile values point want keep fixed comparisons index.alwaysfixed index values point want keep fixed comparisons sel selects iterations MCMC sampler use inference z.names column names selected columns Z .z method method obtaining posterior summaries vector new points. Options \"approx\" \"exact\"; defaults \"approx\", faster particularly large datasets ... arguments pass prediction function","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","text":"data frame containing (posterior mean) estimate posterior standard deviation  predictor risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.MI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/SingVarRiskSummaries.MI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single Variable Risk Summaries for MI BKMR fits\nCompute summaries of the risks associated with a change in a single variable in Z from a single level (quantile) to a second level (quantile), for the other variables in Z fixed to a specific level (quantile) for MI BKMR fits — SingVarRiskSummaries.MI","text":"","code":"if (FALSE) { library(causalbkmr) data(BKMRfits10) singvarrisk.MI.fixed <- SingVarRiskSummaries.MI(BKMRfits = BKMRfits10, which.z=c(1,3,4), qs.diff = c(0.25, 0.75),  q.fixed = c(0.25, 0.50, 0.75), q.alwaysfixed = 0.25, index.alwaysfixed = 2, sel=sel.MI, method = \"approx\")  ## plot the single variable dataframe for the MI fits ggplot(singvarrisk.MI, aes(variable, est, ymin = est - 1.96*sd,                            ymax = est + 1.96*sd, col = q.fixed)) +   geom_hline(aes(yintercept=0), linetype=\"dashed\", color=\"gray\") +   geom_pointrange(position = position_dodge(width = 0.75)) +   coord_flip() + ggtitle(\"\")+   scale_x_discrete(name=\"Variable\")+ scale_y_continuous(name=\"estimate\") }"},{"path":"https://zc2326.github.io/causalbkmr/reference/TE.bkmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate total effect for BKMR — TE.bkmr","title":"Estimate total effect for BKMR — TE.bkmr","text":"Estimate total effect BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TE.bkmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate total effect for BKMR — TE.bkmr","text":"","code":"TE.bkmr(a, astar, e.y, fit.y.TE, X.predict.Y, alpha = 0.05, sel, seed)"},{"path":"https://zc2326.github.io/causalbkmr/reference/TE.bkmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate total effect for BKMR — TE.bkmr","text":"exposure variables current level astar exposure variables counterfactual level e.y effect modifier outcome variable fit.y.TE total effect model fit regressing outcome exposures, effect modifiers confounders outcome X.predict.Y counfounders outcome alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TE.bkmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate total effect for BKMR — TE.bkmr","text":"Totak effect BKMR","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TERiskSummaries.CMA.html","id":null,"dir":"Reference","previous_headings":"","what":"TERiskSummaries.CMA — TERiskSummaries.CMA","title":"TERiskSummaries.CMA — TERiskSummaries.CMA","text":"Compare estimated Total Effect predictors particular quantile second fixed quantile","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TERiskSummaries.CMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TERiskSummaries.CMA — TERiskSummaries.CMA","text":"","code":"TERiskSummaries.CMA(   fit.TE,   e.y = NULL,   e.y.names = NULL,   qs = seq(0.25, 0.75, by = 0.05),   q.fixed = 0.5,   alpha = 0.05,   sel,   seed = 122 )"},{"path":"https://zc2326.github.io/causalbkmr/reference/TERiskSummaries.CMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TERiskSummaries.CMA — TERiskSummaries.CMA","text":"fit.TE total effect model fit regressing outcome exposures, effect modifiers confounders outcome e.y effect modifier outcome variable e.y.names column name effect modifier outcome variable qs vector quantiles calculate overall risk summary q.fixed second quantile compare estimated h function alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TERiskSummaries.CMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TERiskSummaries.CMA — TERiskSummaries.CMA","text":"data frame containing (posterior mean) estimate posterior standard deviation total effect risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TERiskSummaries.CMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TERiskSummaries.CMA — TERiskSummaries.CMA","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/TERiskSummaries.CMA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TERiskSummaries.CMA — TERiskSummaries.CMA","text":"","code":"if (FALSE) { library(causalbkmr) riskSummary10 = TERiskSummaries.CMA(fit.TE = fit.y.TE, e.y=e.y10, e.y.name = \"E.Y\", sel=sel)  ggplot(riskSummary10,        aes(quantile,            est,            ymin = est - 1.96 * sd,            ymax = est + 1.96 * sd)) +   geom_pointrange() }"},{"path":"https://zc2326.github.io/causalbkmr/reference/VarRiskSummary.CMA.html","id":null,"dir":"Reference","previous_headings":"","what":"VarRiskSummary.CMA — VarRiskSummary.CMA","title":"VarRiskSummary.CMA — VarRiskSummary.CMA","text":"combination function VarRiskSummary riskSummary.approx MI BKMR fits, compare estimated h function single variable (set variables) 75th versus 25th percentile, variables fixed particular percentile","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/VarRiskSummary.CMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VarRiskSummary.CMA — VarRiskSummary.CMA","text":"","code":"VarRiskSummary.CMA(   whichz = 1,   BKMRfits,   e.y = NULL,   e.y.names = NULL,   qs.diff = c(0.25, 0.75),   q.fixed = 0.5,   alpha,   sel,   seed )"},{"path":"https://zc2326.github.io/causalbkmr/reference/VarRiskSummary.CMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VarRiskSummary.CMA — VarRiskSummary.CMA","text":"whichz vector indicating variables (columns Z) summary computed BKMRfits object contatinint results return kmbayes function e.y effect modifier outcome variable e.y.names column name effect modifier outcome variable qs.diff vector indicating two quantiles q_1 q_2 compute h(z_{q2}) -h(z_{q1}) q.fixed vector quantiles fix remaining predictors Z alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/VarRiskSummary.CMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VarRiskSummary.CMA — VarRiskSummary.CMA","text":"data frame containing (posterior mean) estimate posterior standard deviation  predictor risk measures","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaMastar.SamplePred.html","id":null,"dir":"Reference","previous_headings":"","what":"YaMastar counterfactual — YaMastar.SamplePred","title":"YaMastar counterfactual — YaMastar.SamplePred","text":"Get YaMastar used NDE NIE caculation","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaMastar.SamplePred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"YaMastar counterfactual — YaMastar.SamplePred","text":"","code":"YaMastar.SamplePred(   a,   astar,   e.y,   fit.m,   fit.y,   X.predict.M,   X.predict.Y,   sel,   seed,   K )"},{"path":"https://zc2326.github.io/causalbkmr/reference/YaMastar.SamplePred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"YaMastar counterfactual — YaMastar.SamplePred","text":"exposure variables current level astar exposure variables counterfactual level e.y effect modifier outcome variable fit.m model fit regressing mediator exposures confounders mediator fit.y model fit regressing outcome exposures, effect modifiers, mediator confounders outcome X.predict.M counfounders mediator X.predict.Y counfounders outcome sel vector selecting iterations fit retained inference seed random seed use evaluate code K number samples generate MCMC iteration","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaMastar.SamplePred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"YaMastar counterfactual — YaMastar.SamplePred","text":"vector containing sample prediction YaMastar","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaYastar.SamplePred.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate TE for BKMR — YaYastar.SamplePred","title":"Estimate TE for BKMR — YaYastar.SamplePred","text":"Get Ya Yastar used effects caculation","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaYastar.SamplePred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate TE for BKMR — YaYastar.SamplePred","text":"","code":"YaYastar.SamplePred(a, astar, e.y, fit.y.TE, X.predict.Y, sel, seed)"},{"path":"https://zc2326.github.io/causalbkmr/reference/YaYastar.SamplePred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate TE for BKMR — YaYastar.SamplePred","text":"exposure variables current level astar exposure variables counterfactual level e.y effect modifier outcome variable fit.y.TE total effect model fit regressing outcome exposures, effect modifiers confounders outcome X.predict.Y counfounders outcome sel vector selecting iterations fit retained inference seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaYastar.SamplePred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate TE for BKMR — YaYastar.SamplePred","text":"list containing sample prediction Ya Yastar","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaYastar.SamplePred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate TE for BKMR — YaYastar.SamplePred","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/YaYastar.SamplePred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate TE for BKMR — YaYastar.SamplePred","text":"","code":"if (FALSE) { library(causalbkmr) dat <-  cma_sampledata(N=300, L=3, P=3, scenario=1, seed=7)  A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x3) y  <- dat$y m  <- dat$M  E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M) Z.Y <- cbind(A, E.Y) Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.m,file=\"bkmr_m.RData\")  X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25)) a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  sel<-seq(2500,5000,by=5)  TE.ey10 <- TE.bkmr(a=a, astar=astar, e.y = e.y10, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122) TE.ey90 <- TE.bkmr(a=a, astar=astar, e.y = e.y90, fit.y.TE=fit.y.TE, X.predict=X.predict, alpha=0.05, sel=sel, seed=122) TE.ey10$est TE.ey90$est }"},{"path":"https://zc2326.github.io/causalbkmr/reference/Z.complete.MI.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compile the exposures from all MI datasets — Z.complete.MI","title":"Function to compile the exposures from all MI datasets — Z.complete.MI","text":"Function compile exposures MI datasets","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/Z.complete.MI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compile the exposures from all MI datasets — Z.complete.MI","text":"","code":"Z.complete.MI(BKMRfits)"},{"path":"https://zc2326.github.io/causalbkmr/reference/Z.complete.MI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compile the exposures from all MI datasets — Z.complete.MI","text":"BKMRfits @param BKMRfits  list multiple BKMR fits fits ran number MCMC iterations.","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/Z.complete.MI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compile the exposures from all MI datasets — Z.complete.MI","text":"dataframe","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/Z.complete.MI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to compile the exposures from all MI datasets — Z.complete.MI","text":"step needed contrast used estimating effects across MI BKMR fits consistent. (.e. 25th, 50th, 75th percentile metals used estimating effect change metals 25th 75th outcome MI BKMR fit). data imputed exposures, original Z matrix can used Z.complete.MI guided examples, go https://zc2326.github.io/causalbkmr/articles/MI_BKMR.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/Z.complete.MI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to compile the exposures from all MI datasets — Z.complete.MI","text":"","code":"Z.MI <- Z.complete.MI(BKMRfits10)"},{"path":"https://zc2326.github.io/causalbkmr/reference/cma_sampledata.html","id":null,"dir":"Reference","previous_headings":"","what":"CMA Sample Data Simulation — cma_sampledata","title":"CMA Sample Data Simulation — cma_sampledata","text":"Simulate simple sample dataset BKMRCMA illustration, function generate simulated data multiple exposures true mediated effect","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/cma_sampledata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CMA Sample Data Simulation — cma_sampledata","text":"","code":"cma_sampledata(N, L, P, scenario, seed)"},{"path":"https://zc2326.github.io/causalbkmr/reference/cma_sampledata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CMA Sample Data Simulation — cma_sampledata","text":"N sample size dataset L number mixture components P number covariates scenario Scenarios  similar scenarios presented paper seed random seed use evaluate code","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/cma_sampledata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CMA Sample Data Simulation — cma_sampledata","text":"data frame","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/cma_sampledata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CMA Sample Data Simulation — cma_sampledata","text":"","code":"dat <-  cma_sampledata(N=300, L=3, P=3, scenario=1, seed=7) head(dat$data, n = 3L) #>           z1          z2          z3          M          x1         x2 #> 1  2.1398615  0.66567853 -0.80106452  0.6239949 -1.00620320  0.4650244 #> 2 -1.1923396 -0.42173859 -0.07880356 -0.2518323 -0.07811248  0.1077124 #> 3 -0.7254667 -0.09880639 -0.45684941 -0.2787926 -1.44686488 -0.4673260 #>           x3         y #> 1 -0.7528264  1.047106 #> 2 -0.2061189 -1.554507 #> 3 -0.2041117 -1.071443"},{"path":"https://zc2326.github.io/causalbkmr/reference/makeKpart.html","id":null,"dir":"Reference","previous_headings":"","what":"makeKpart — makeKpart","title":"makeKpart — makeKpart","text":"makeKpart","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/makeKpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makeKpart — makeKpart","text":"","code":"makeKpart(r, Z1, Z2 = NULL)"},{"path":"https://zc2326.github.io/causalbkmr/reference/makeKpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makeKpart — makeKpart","text":"r need update Z1 need update Z2 need update","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/makeKpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"makeKpart — makeKpart","text":"need update","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/makeVcomps.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — makeVcomps","title":"Title — makeVcomps","text":"Title","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/makeVcomps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — makeVcomps","text":"","code":"makeVcomps(r, lambda, Z, data.comps)"},{"path":"https://zc2326.github.io/causalbkmr/reference/makeVcomps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — makeVcomps","text":"r need update lambda need update Z need update data.comps need update","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/makeVcomps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — makeVcomps","text":"need update","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/mediation.bkmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","title":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","text":"Estimate NDE/NIE BKMR(plus TE)","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/mediation.bkmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","text":"","code":"mediation.bkmr(   a,   astar,   e.y,   fit.m = NULL,   fit.y = NULL,   fit.y.TE = NULL,   X.predict.M = NULL,   X.predict.Y = NULL,   effects = \"all\",   m.quant = c(0.1, 0.5, 0.75),   m.value = NULL,   alpha = 0.05,   sel,   seed,   K )"},{"path":"https://zc2326.github.io/causalbkmr/reference/mediation.bkmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","text":"exposure variables current level astar exposure variables counterfactual level e.y effect modifier outcome variable fit.m model fit regressing mediator exposures confounders mediator fit.y model fit regressing outcome exposures, effect modifiers, mediator confounders outcome fit.y.TE total effect model fit regressing outcome exposures, effect modifiers confounders outcome X.predict.M counfounders mediator X.predict.Y counfounders outcome effects type(s) effects users want output m.quant values quantile mediator set m.value values mediator set alpha 1-confidence interval sel vector selecting iterations fit retained inference seed random seed use evaluate code K number samples generate MCMC iteration YaMastar calculation","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/mediation.bkmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","text":"list contaning sample prediction TE, NDE, NIE summary statistics","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/mediation.bkmr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","text":"guided examples, go https://zc2326.github.io/causalbkmr/articles/BKMRCMA_QuickStart.html","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/mediation.bkmr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate NDE/NIE for BKMR(plus TE) — mediation.bkmr","text":"","code":"if (FALSE) { library(causalbkmr) dat <-  cma_sampledata(N=300, L=3, P=3, scenario=1, seed=7)  A <- cbind(dat$z1, dat$z2, dat$z3) X <- cbind(dat$x3) y  <- dat$y m  <- dat$M  E.M <- NULL E.Y <- dat$x2  Z.M <- cbind(A,E.M) Z.Y <- cbind(A, E.Y) Zm.Y <- cbind(Z.Y, m)  set.seed(1) fit.y <- kmbayes(y=y, Z=Zm.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y,file=\"bkmr_y.RData\")  set.seed(2) fit.y.TE <- kmbayes(y=y, Z=Z.Y, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.y.TE,file=\"bkmr_y_TE.RData\")  set.seed(3) fit.m <- kmbayes(y=m, Z=Z.M, X=X, iter=5000, verbose=TRUE, varsel=FALSE) #save(fit.m,file=\"bkmr_m.RData\")  X.predict <- matrix(colMeans(X),nrow=1) astar <- c(apply(A, 2, quantile, probs=0.25)) a <- c(apply(A, 2, quantile, probs=0.75))  e.y10 = quantile(E.Y, probs=0.1) e.y90 = quantile(E.Y, probs=0.9)  sel<-seq(2500,5000,by=5)  #' mediationeffects.ey10  <- mediation.bkmr(a=a, astar=astar, e.y = e.y10, fit.m=fit.m, fit.y=fit.y, fit.y.TE=fit.y.TE, X.predict.M=X.predict, X.predict.Y=X.predict, alpha=0.05, sel=sel, seed=22, K=10) mediationeffects.ey10$est plotdf <- as.data.frame(mediationeffects.ey10$est) plotdf[\"Effect\"] <- rownames(plotdf) ggplot(plotdf, aes(Effect, mean, ymin = lower, ymax = upper ))  +   geom_pointrange(position = position_dodge(width = 0.75))  +  coord_flip()  }"},{"path":"https://zc2326.github.io/causalbkmr/reference/postresults.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior/Bootstrap Summary Function — postresults","title":"Posterior/Bootstrap Summary Function — postresults","text":"Calculate mean/median/CI/sd vector posterior/bootstrap samples","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/postresults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior/Bootstrap Summary Function — postresults","text":"","code":"postresults(posteriorsamp, alpha)"},{"path":"https://zc2326.github.io/causalbkmr/reference/postresults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior/Bootstrap Summary Function — postresults","text":"posteriorsamp sample prediction alpha 1-confidence interval","code":""},{"path":"https://zc2326.github.io/causalbkmr/reference/postresults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior/Bootstrap Summary Function — postresults","text":"Mean. median , CI sd sample prediction","code":""}]
